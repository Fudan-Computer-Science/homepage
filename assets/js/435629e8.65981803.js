"use strict";(self.webpackChunkhomepage=self.webpackChunkhomepage||[]).push([[3513],{8089:(e,n,r)=>{r.d(n,{A:()=>i});r(96540);const t={authorCard:"authorCard_cLwM",avatar:"avatar_zeTR",info:"info_k6jV",name:"name_crOL",date:"date_OrNK"};var a=r(74848);function i({author:e,date:n}){return(0,a.jsxs)("div",{className:t.authorCard,children:[e.imageURL&&(0,a.jsx)("img",{className:t.avatar,src:e.imageURL,alt:e.name}),(0,a.jsxs)("div",{className:t.info,children:[(0,a.jsx)("div",{className:t.name,children:e.url?(0,a.jsx)("a",{href:e.url,target:"_blank",rel:"noopener noreferrer",children:e.name}):e.name}),(0,a.jsx)("time",{className:t.date,children:n})]})]})}},27625:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>d,default:()=>g,frontMatter:()=>l,metadata:()=>t,toc:()=>u});const t=JSON.parse('{"id":"\u8b1b\u7fa9/\u8b1b\u7fa9/\u4e0a\u8ab2\u8b1b\u7fa9/th/advanced_class/Segtree","title":"\u7dda\u6bb5\u6a39","description":"\u7dda\u6bb5\u6a39\u662f\u4e00\u7a2e\u9ad8\u6548\u7684\u6578\u64da\u7d50\u69cb\uff0c\u4e3b\u8981\u7528\u65bc\u8655\u7406\u6578\u7d44\u7684\u5340\u9593\u67e5\u8a62\u548c\u66f4\u65b0\u64cd\u4f5c\u3002","source":"@site/docs/\u8b1b\u7fa9/\u8b1b\u7fa9/\u4e0a\u8ab2\u8b1b\u7fa9/14_th/advanced_class/14-Segtree.mdx","sourceDirName":"\u8b1b\u7fa9/\u8b1b\u7fa9/\u4e0a\u8ab2\u8b1b\u7fa9/14_th/advanced_class","slug":"/\u8b1b\u7fa9/\u8b1b\u7fa9/\u4e0a\u8ab2\u8b1b\u7fa9/th/advanced_class/Segtree","permalink":"/homepage/docs/\u8b1b\u7fa9/\u8b1b\u7fa9/\u4e0a\u8ab2\u8b1b\u7fa9/th/advanced_class/Segtree","draft":false,"unlisted":false,"editUrl":"https://github.com/Fudan-Computer-Science/homepage/tree/main/docs/\u8b1b\u7fa9/\u8b1b\u7fa9/\u4e0a\u8ab2\u8b1b\u7fa9/14_th/advanced_class/14-Segtree.mdx","tags":[],"version":"current","sidebarPosition":14,"frontMatter":{"sidebar_position":14,"title":"\u7dda\u6bb5\u6a39","description":"\u7dda\u6bb5\u6a39\u662f\u4e00\u7a2e\u9ad8\u6548\u7684\u6578\u64da\u7d50\u69cb\uff0c\u4e3b\u8981\u7528\u65bc\u8655\u7406\u6578\u7d44\u7684\u5340\u9593\u67e5\u8a62\u548c\u66f4\u65b0\u64cd\u4f5c\u3002","hide_table_of_contents":true},"sidebar":"tutorialSidebar","previous":{"title":"\u55ae\u8abf\u6027","permalink":"/homepage/docs/\u8b1b\u7fa9/\u8b1b\u7fa9/\u4e0a\u8ab2\u8b1b\u7fa9/th/advanced_class/Monotonic"},"next":{"title":"\u7b2c\u5341\u4e09\u5c46","permalink":"/homepage/docs/category/\u7b2c\u5341\u4e09\u5c46"}}');var a=r(74848),i=r(28453),s=r(8089);const l={sidebar_position:14,title:"\u7dda\u6bb5\u6a39",description:"\u7dda\u6bb5\u6a39\u662f\u4e00\u7a2e\u9ad8\u6548\u7684\u6578\u64da\u7d50\u69cb\uff0c\u4e3b\u8981\u7528\u65bc\u8655\u7406\u6578\u7d44\u7684\u5340\u9593\u67e5\u8a62\u548c\u66f4\u65b0\u64cd\u4f5c\u3002",hide_table_of_contents:!0},d="\u7dda\u6bb5\u6a39",c={},u=[{value:"\u5148\u5099\u77e5\u8b58",id:"\u5148\u5099\u77e5\u8b58",level:2},{value:"\u524d\u5c0e",id:"\u524d\u5c0e",level:2},{value:"\u4ecb\u7d39",id:"\u4ecb\u7d39",level:2},{value:"\u69cb\u5efa",id:"\u69cb\u5efa",level:3},{value:"\u67e5\u8a62",id:"\u67e5\u8a62",level:3},{value:"\u4fee\u6539",id:"\u4fee\u6539",level:3},{value:"\u5be6\u4f5c",id:"\u5be6\u4f5c",level:2},{value:"\u5c0f\u8a66\u8eab\u624b",id:"\u5c0f\u8a66\u8eab\u624b",level:2},{value:"\u5ef6\u4f38\u5b78\u7fd2",id:"\u5ef6\u4f38\u5b78\u7fd2",level:2}];function o(e){const n={a:"a",annotation:"annotation",br:"br",code:"code",del:"del",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",math:"math",mi:"mi",mn:"mn",mo:"mo",mrow:"mrow",p:"p",pre:"pre",semantics:"semantics",span:"span",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(s.A,{author:{name:"Bryan Huang // \u8349\u8c93 (\u9032\u968e\u6559\u5b78)",url:"https://github.com/Bryan0324",imageURL:"https://github.com/Bryan0324.png"},date:"2025-09-20"}),"\n",(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"\u7dda\u6bb5\u6a39",children:"\u7dda\u6bb5\u6a39"})}),"\n",(0,a.jsx)(n.h2,{id:"\u5148\u5099\u77e5\u8b58",children:"\u5148\u5099\u77e5\u8b58"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"dfs"}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://hackmd.io/@Bryan0324/BinaryTree",children:"\u4e8c\u5143\u6a39"})}),"\n",(0,a.jsx)(n.li,{children:"\u524d\u7db4\u548c"}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"\u524d\u5c0e",children:"\u524d\u5c0e"}),"\n",(0,a.jsxs)(n.p,{children:["\u60f3\u5fc5\u5404\u4f4d\u61c9\u8a72\u5df2\u7d93\u5b78\u904e\u524d\u7db4\u548c\u4e86(?",(0,a.jsx)(n.br,{}),"\n","\u4f46\u5728\u7528\u524d\u7db4\u548c\u6642\u96d6\u7136\u53ef\u4ee5\u7528",(0,a.jsxs)(n.span,{className:"katex",children:[(0,a.jsx)(n.span,{className:"katex-mathml",children:(0,a.jsx)(n.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,a.jsxs)(n.semantics,{children:[(0,a.jsxs)(n.mrow,{children:[(0,a.jsx)(n.mi,{children:"O"}),(0,a.jsx)(n.mo,{stretchy:"false",children:"("}),(0,a.jsx)(n.mn,{children:"1"}),(0,a.jsx)(n.mo,{stretchy:"false",children:")"})]}),(0,a.jsx)(n.annotation,{encoding:"application/x-tex",children:"O(1)"})]})})}),(0,a.jsx)(n.span,{className:"katex-html","aria-hidden":"true",children:(0,a.jsxs)(n.span,{className:"base",children:[(0,a.jsx)(n.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,a.jsx)(n.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"O"}),(0,a.jsx)(n.span,{className:"mopen",children:"("}),(0,a.jsx)(n.span,{className:"mord",children:"1"}),(0,a.jsx)(n.span,{className:"mclose",children:")"})]})})]}),"\u7684\u6642\u9593\u4f86\u505a",(0,a.jsx)(n.strong,{children:"\u67e5\u8a62"}),"\u4f46",(0,a.jsx)(n.br,{}),"\n","\u6c92\u8fa6\u6cd5\u4fee\u6539(",(0,a.jsx)(n.del,{children:"\u7576\u7136\u4f60\u53ef\u4ee5\u6bcf\u6b21\u4fee\u6539\u90fd\u628a\u6574\u500b\u524d\u7db4\u548c\u780d\u6389\u91cd\u505a\u4f46\u9019\u6a23\u6642\u9593\u8907\u96dc\u5ea6\u6975\u7cdf"}),")",(0,a.jsx)(n.br,{}),"\n","\u6240\u4ee5\uff0c\u5982\u679c\u6211\u5011\u9700\u8981\u53ef\u4ee5\u652f\u63f4\u4fee\u6539\u64cd\u4f5c\u3001\u67e5\u8a62\u7bc4\u570d\u7e3d\u548c\u7684\u7d50\u69cb\u6642\uff0c\u6211\u5011\u53ef\u4ee5\u8003\u616e\u4f7f\u7528\u672c\u7bc7\u7684\u4e3b\u89d2",(0,a.jsx)(n.strong,{children:"\u7dda\u6bb5\u6a39"})]}),"\n",(0,a.jsx)(n.h2,{id:"\u4ecb\u7d39",children:"\u4ecb\u7d39"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.img,{src:"https://hackmd.io/_uploads/HJTBpsCaJe.png",alt:"\u7dda\u6bb5\u6a39"}),(0,a.jsx)(n.br,{}),"\n","\u9019\u662f\u4e00\u7dda\u6bb5\u6a39\uff0c\u4f86\u69cb\u5efa\u4ed6\u5427\uff01"]}),"\n",(0,a.jsx)(n.h3,{id:"\u69cb\u5efa",children:"\u69cb\u5efa"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.img,{src:"https://github.com/Bryan0324/fudan_cppclass/blob/main/lecture/Segtree/Segtreebuild/build1.png?raw=true",alt:"build1.drawio"}),(0,a.jsx)(n.br,{}),"\n","mid\u662f\u9019\u7bc4\u570d\u7684\u4e00\u534a( \u4e0a\u5716mid\u70ba4 )",(0,a.jsx)(n.br,{}),"\n",(0,a.jsx)(n.img,{src:"https://github.com/Bryan0324/fudan_cppclass/blob/main/lecture/Segtree/Segtreebuild/build2.png?raw=true",alt:"build2.drawio"}),(0,a.jsx)(n.br,{}),"\n",(0,a.jsx)(n.img,{src:"https://github.com/Bryan0324/fudan_cppclass/blob/main/lecture/Segtree/Segtreebuild/build3.png?raw=true",alt:"build3.drawio"}),(0,a.jsx)(n.br,{}),"\n",(0,a.jsx)(n.img,{src:"https://github.com/Bryan0324/fudan_cppclass/blob/main/lecture/Segtree/Segtreebuild/build4.png?raw=true",alt:"build4.drawio"}),(0,a.jsx)(n.br,{}),"\n",(0,a.jsx)(n.img,{src:"https://github.com/Bryan0324/fudan_cppclass/blob/main/lecture/Segtree/Segtreebuild/build5.png?raw=true",alt:"build5.drawio"}),(0,a.jsx)(n.br,{}),"\n",(0,a.jsx)(n.img,{src:"https://github.com/Bryan0324/fudan_cppclass/blob/main/lecture/Segtree/Segtreebuild/build6.png?raw=true",alt:"build6.drawio"}),(0,a.jsx)(n.br,{}),"\n",(0,a.jsx)(n.img,{src:"https://github.com/Bryan0324/fudan_cppclass/blob/main/lecture/Segtree/Segtreebuild/build7.png?raw=true",alt:"build7.drawio"}),(0,a.jsx)(n.br,{}),"\n",(0,a.jsx)(n.img,{src:"https://github.com/Bryan0324/fudan_cppclass/blob/main/lecture/Segtree/Segtreebuild/build8.png?raw=true",alt:"build8.drawio"}),(0,a.jsx)(n.br,{}),"\n",(0,a.jsx)(n.img,{src:"https://github.com/Bryan0324/fudan_cppclass/blob/main/lecture/Segtree/Segtreebuild/build9.png?raw=true",alt:"build9.drawio"}),(0,a.jsx)(n.br,{}),"\n",(0,a.jsx)(n.img,{src:"https://github.com/Bryan0324/fudan_cppclass/blob/main/lecture/Segtree/Segtreebuild/build10.png?raw=true",alt:"build10.drawio"}),(0,a.jsx)(n.br,{}),"\n",(0,a.jsx)(n.img,{src:"https://github.com/Bryan0324/fudan_cppclass/blob/main/lecture/Segtree/Segtreebuild/build11.png?raw=true",alt:"build11.drawio"})]}),"\n",(0,a.jsxs)(n.p,{children:["\u6211\u5011\u6210\u529f\u7a2e\u51fa\u4e00\u9846\u7dda\u6bb5\u6a39\u4e86(\u638c\u8072)",(0,a.jsx)(n.br,{}),"\n","\u4f46\u55ae\u55ae\u662f\u7a2e\u51fa\u4e00\u9846\u7dda\u6bb5\u6a39\u6c92\u7528\uff0c\u9084\u8981\u914d\u5408\u52a0\u4e0a\u67e5\u8a62\u7684\u529f\u80fd\u624d\u80fd\u8b93\u7dda\u6bb5\u6a39\u5177\u6709\u610f\u7fa9"]}),"\n",(0,a.jsx)(n.h3,{id:"\u67e5\u8a62",children:"\u67e5\u8a62"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.img,{src:"https://github.com/Bryan0324/fudan_cppclass/blob/main/lecture/Segtree/Segtreefind/find_pic-find1.drawio.png?raw=true",alt:"find_pic-find1.drawio"}),(0,a.jsx)(n.br,{}),"\n",(0,a.jsx)(n.img,{src:"https://github.com/Bryan0324/fudan_cppclass/blob/main/lecture/Segtree/Segtreefind/find_pic-find2.drawio.png?raw=true",alt:"find_pic-find2.drawio"}),(0,a.jsx)(n.br,{}),"\n",(0,a.jsx)(n.img,{src:"https://github.com/Bryan0324/fudan_cppclass/blob/main/lecture/Segtree/Segtreefind/find_pic-find3.drawio.png?raw=true",alt:"find_pic-find3.drawio"}),(0,a.jsx)(n.br,{}),"\n",(0,a.jsx)(n.img,{src:"https://github.com/Bryan0324/fudan_cppclass/blob/main/lecture/Segtree/Segtreefind/find_pic-find4.drawio.png?raw=true",alt:"find_pic-find4.drawio"}),(0,a.jsx)(n.br,{}),"\n",(0,a.jsx)(n.img,{src:"https://github.com/Bryan0324/fudan_cppclass/blob/main/lecture/Segtree/Segtreefind/find_pic-find5.drawio.png?raw=true",alt:"find_pic-find5.drawio"}),(0,a.jsx)(n.br,{}),"\n","\u4f46\u53ea\u6709\u5c0b\u627e\u7684\u7dda\u6bb5\u6a39\u548c\u524d\u7db4\u548c\u6709\u4ec0\u9ebc\u5dee\u5225!!!",(0,a.jsx)(n.del,{children:"(\u6642\u9593\u8907\u96dc\u5ea6\u6bd4\u524d\u7db4\u548c\u5927"}),"\u6240\u4ee5\u63a5\u4e0b\u4f86\u8981\u4ecb\u7d39\u5982\u4f55\u4fee\u6539"]}),"\n",(0,a.jsx)(n.h3,{id:"\u4fee\u6539",children:"\u4fee\u6539"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.img,{src:"https://github.com/Bryan0324/fudan_cppclass/blob/main/lecture/Segtree/Segtreeupdate/update_pic-update1.drawio.png?raw=true",alt:"update_pic-update1.drawio"}),(0,a.jsx)(n.br,{}),"\n",(0,a.jsx)(n.img,{src:"https://github.com/Bryan0324/fudan_cppclass/blob/main/lecture/Segtree/Segtreeupdate/update_pic-update2.drawio.png?raw=true",alt:"update_pic-update2.drawio"}),(0,a.jsx)(n.br,{}),"\n",(0,a.jsx)(n.img,{src:"https://github.com/Bryan0324/fudan_cppclass/blob/main/lecture/Segtree/Segtreeupdate/update_pic-update3.drawio.png?raw=true",alt:"update_pic-update3.drawio"}),(0,a.jsx)(n.br,{}),"\n",(0,a.jsx)(n.img,{src:"https://github.com/Bryan0324/fudan_cppclass/blob/main/lecture/Segtree/Segtreeupdate/update_pic-update4.drawio.png?raw=true",alt:"update_pic-update4.drawio"}),(0,a.jsx)(n.br,{}),"\n",(0,a.jsx)(n.img,{src:"https://github.com/Bryan0324/fudan_cppclass/blob/main/lecture/Segtree/Segtreeupdate/update_pic-update5.drawio.png?raw=true",alt:"update_pic-update5.drawio"}),(0,a.jsx)(n.br,{}),"\n",(0,a.jsx)(n.img,{src:"https://github.com/Bryan0324/fudan_cppclass/blob/main/lecture/Segtree/Segtreeupdate/update_pic-update6.drawio.png?raw=true",alt:"update_pic-update6.drawio"}),"\n\u5b78\u6703\u4fee\u6539\u4e86!!!"]}),"\n",(0,a.jsx)(n.h2,{id:"\u5be6\u4f5c",children:"\u5be6\u4f5c"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-cpp",children:"typedef pair<size_t, size_t> lnr; //\u5de6\u548c\u53f3\n#define left first\n#define right second\nstruct node() //\u548c\u4e8c\u5143\u6a39\u4e00\u6a23\uff0c\u6bcf\u500b\u7bc0\u9ede\u6027\u8cea\u90fd\u4e00\u6a23\n{\n    node *l = nullptr, *r = nullptr; //\u548c\u4e8c\u5143\u6a39\u4e00\u6a23\uff0c\u9700\u8981\u5de6\u7bc0\u9ede\u548c\u53f3\u7bc0\u9ede\n    size_t num = 0, lazy_tag = 0;    //\u7bc0\u9ede\u6240\u88dd\u7684\u6578\u5b57\u3001\u61f6\u4eba\u6a19\u7c64\n    \n    //Constructor(\u5efa\u69cb\u5f0f) \u62ff\u4f86\u69cb\u5efanode\u7684\n    node(vector<size_t>::iterator vl, vector<size_t>::iterator vr)\n    {    //\u5b78\u904e\u4e8c\u5143\u6a39\u61c9\u8a72\u90fd\u6709\u6307\u6a19\u7684\u6982\u5ff5 (?  ( \u63a1\u524d\u9589\u5f8c\u958b\u5340\u9593 )\n        if(vl+1 == vr) //\u5230\u5e95\u4e86\uff0c\u4e0d\u80fd\u7e7c\u7e8c\u5f80\u4e0b(\u524d\u9589\u5f8c\u958b)   *\u905e\u8ff4\u7d42\u6b62\u689d\u4ef6*\n        {\n            num = *vl;\n            return;\n        }\n        vector<size_t>::iterator mid = vl + (vr-vl)/2; //\u4f9d\u7167\u7d42\u9ede\u5207\u5272\u5340\u9593\n        l = new node(vl, mid);//                     *\u5411\u4e0b\u905e\u8ff4*\n        r = new node(mid, vr); //\u524d\u9589\u5f8c\u958b\n        num = l.num + r.num;  //\u628a\u5b50\u4ee3\u7684\u7d50\u679c\u5408\u4f75\u5f97\u5230\u6bcd\u4ee3 *\u63a5\u6536\u905e\u8ff4\u50b3\u4e0a\u4f86\u7684\u7d50\u679c*\n        return;\n    }\n    // \u4e0b\u63a8\u61f6\u6a19\n    void push_lazytag(lnr range)\n    {\n        size_t mid = ( range.left + range.right )/2;\n        // \u5de6\u7bc0\u9ede\u7684\u5927\u5c0f\u70ba(mid - range.left)\uff0c\u88e1\u9762\u6240\u6709\u7684\u5143\u7d20\u90fd\u8981\u52a0lazy_tag\u7684\u6578\u503c\n        l->num += lazy_tag * (mid - range.left);\n        r->num += lazy_tag * (range.right - mid);\n        // \u5b50\u7bc0\u9ede\u4e0b\u7684\u7bc0\u9ede\u4e5f\u6703\u88ab\u52a0\u5230\n        l->lazy_tag += lazy_tag;\n        r->lazy_tag += lazy_tag;\n        lazy_tag = 0;\n        return;\n    }\n    \n    //\u67e5\u8a62\u90e8\u5206     *\u7576\u524d\u683c\u5b50\u6240\u4ee3\u8868\u7684\u7bc4\u570d *\u76ee\u6a19\u7684\u7bc4\u570d   ( \u7686\u63a1\u524d\u9589\u5f8c\u958b\u5340\u9593 )\n    size_t query(lnr range, lnr target)\n    {\n        // \u7528\u6578\u7dda\u7684\u9806\u5e8f\u5beb\u6bd4\u8f03\u4e0d\u5bb9\u6613\u4e82\n        if(target.left <= range.left && range.right <= target.right)\n        { // \u76ee\u524d\u6240\u5728\u7bc0\u9ede \u88ab \u67e5\u8a62\u7bc4\u570d \u5305\u542b\n            return num;\n        }\n        push_lazytag(range); //\u8981\u627e\u5b50\u4ee3\uff0c\u9700\u5148\u4e0b\u63a8\u61f6\u6a19\n        size_t mid = (range.left+range.right)/2; // \u9019\u4e00\u683c\u7684\u4e2d\u7dda\n        if(mid <= target.left)return r->query({mid, range.right}, target);\n        //\u5de6\u5c0f\u5b69\u51fa\u754c => \u53ea\u9700\u8981\u627e\u53f3\u5c0f\u5b69\n        \n        if(target.right <= mid)return l->query({range.left, mid}, target);\n        //\u53f3\u5c0f\u5b69\u51fa\u754c => \u53ea\u9700\u8981\u627e\u5de6\u5c0f\u5b69\n        \n        //\u5de6\u53f3\u5c0f\u5b69\u7686\u672a\u51fa\u754c => \u5169\u8005\u90fd\u8981\u627e\n        return r->query({mid, range.right}, target) + l->query({range.left, mid}, target);\n    }\n    \n    void modify(lnr range, lnr target, size_t value)\n    {\n        num += value * (range.right - range.left); // \u5c07\u905e\u8ff4\u5230\u7684\u7bc0\u9ede\u589e\u52a0\uff0c(range.right - range.left)\u70ba\u76ee\u524d\u7bc0\u9ede\u7684\u5927\u5c0f\n        if(target.left <= range.left && range.right <= target.right)\n        { // \u76ee\u524d\u6240\u5728\u7bc0\u9ede \u88ab \u67e5\u8a62\u7bc4\u570d \u5305\u542b\n            lazy_tag += value * (range.right - range.left);\n            // \u589e\u52a0\u61f6\u6a19\n            return;\n        }\n        push_lazytag(range); //\u8981\u627e\u5b50\u4ee3\uff0c\u9700\u5148\u4e0b\u63a8\u61f6\u6a19\n        size_t mid = (range.left+range.right)/2;\n        if( !(mid <= target.left) ) l->modify({range.left, mid}, target, n);\n        //\u5de6\u5c0f\u5b69 *\u672a*\u51fa\u754c => \u9700\u8981\u627e\u5de6\u5c0f\u5b69\n        if( !(target.right <= mid) ) r->modify({mid, range.right}, target, n);\n        //\u53f3\u5c0f\u5b69 *\u672a*\u51fa\u754c => \u9700\u8981\u627e\u53f3\u5c0f\u5b69\n        return;\n    }\n}\n// \u5305\u88dd (\u65b9\u4fbf\u4f7f\u7528\uff0c\u975e\u5fc5\u8981)\nclass SegTree\n{\n    public:\n    node *root = nullptr;\n    vector<size_t>::iterator vl, vr;\n    SegTree(vector<size_t>::iterator l, vector<size_t>::iterator r)\n    {\n        vl = l;\n        vr = r;\n        root = new node(l, r);\n        return;\n    }\n    size_t query(lnr target)\n    {\n        return root->query({0, r-l}, target);\n    }\n    void modify(lnr target, size_t n)\n    {\n        root->modify({0, r-l}, target, n)\n        return;\n    }\n}\n"})}),"\n",(0,a.jsx)(n.h2,{id:"\u5c0f\u8a66\u8eab\u624b",children:"\u5c0f\u8a66\u8eab\u624b"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://cses.fi/problemset/task/1648",children:"Dynamic Range Sum Queries (CSES)"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://cses.fi/problemset/task/1649",children:"Dynamic Range Minimum Queries (CSES)"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://cses.fi/problemset/task/1651",children:"Range Update Queries (CSES)"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://cses.fi/problemset/task/1143",children:"Hotel Queries (CSES)"})}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"\u5ef6\u4f38\u5b78\u7fd2",children:"\u5ef6\u4f38\u5b78\u7fd2"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"\u52d5\u614b\u958b\u9ede\u7dda\u6bb5\u6a39"}),"\n",(0,a.jsx)(n.li,{children:"\u6301\u4e45\u5316\u7dda\u6bb5\u6a39"}),"\n",(0,a.jsx)(n.li,{children:"\u674e\u8d85\u7dda\u6bb5\u6a39"}),"\n",(0,a.jsx)(n.li,{children:"\u5409\u5982\u4e00\u7dda\u6bb5\u6a39"}),"\n"]})]})}function g(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(o,{...e})}):o(e)}},28453:(e,n,r)=>{r.d(n,{R:()=>s,x:()=>l});var t=r(96540);const a={},i=t.createContext(a);function s(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);